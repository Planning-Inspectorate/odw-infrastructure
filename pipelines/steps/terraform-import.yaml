steps:
  - script: |
      set -euo pipefail

      echo "Starting Terraform Import for Existing Containers..."
      echo "----------------------------------------------------"
      echo "Subscription  : $SUBSCRIPTION_ID"
      echo "Resource Group: pins-rg-data-odw-${ENV}-uks"
      echo "Storage Acct  : ${DATA_LAKE_STORAGE}"
      echo "----------------------------------------------------"
      echo ""

      containers=(
        "insights-logs-builtinsqlreqsended"
        "logging"
        "odw-config-db"
        "odw-curated-migration"
        "odw-standardised-delta"
        "s51-advice-backup"
        "saphrsdata-to-odw"
        "synapse"
      )

      for container in "${containers[@]}"; do
        echo "Importing container: $container"

        timeout 60 terraform import \
          "module.synapse_data_lake.azurerm_storage_container.synapse[\"$container\"]" \
          "/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/pins-rg-data-odw-${ENV}-uks/providers/Microsoft.Storage/storageAccounts/${DATA_LAKE_STORAGE}/blobServices/default/containers/$container" \
        && echo "Imported: $container" \
        || echo "Failed to import: $container (timeout or error)"

        echo "------------------------------------------------------"
      done

      echo "All imports attempts finished"
    displayName: 'Terraform Import Existing Containers'
    workingDirectory: ${{ parameters.workingDirectory }}
