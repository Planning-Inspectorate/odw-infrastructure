steps:
  - script: |
      set -euo pipefail

      export TF_LOG=DEBUG
      export TF_LOG_PATH="terraform-debug.log"

      echo "Starting Terraform Import for Existing Containers..."
      echo "----------------------------------------------------"
      echo "Subscription  : $SUBSCRIPTION_ID"
      echo "Resource Group: pins-rg-data-odw-${ENV}-uks"
      echo "Storage Acct  : ${DATA_LAKE_STORAGE}"
      echo "----------------------------------------------------"
      echo ""

      containers=(
        "insights-logs-builtinsqlreqsended"
        "logging"
        "odw-config-db"
        "odw-curated-migration"
        "odw-standardised-delta"
        "s51-advice-backup"
        "saphrsdata-to-odw"
        "synapse"
      )

      for container in "${containers[@]}"; do
        echo "Checking existence of container: $container"
        
        exists=$(az storage container show \
          --name "$container" \
          --account-name "$DATA_LAKE_STORAGE" \
          --auth-mode login \
          --query "name" \
          --output tsv || echo "")

        if [[ -z "$exists" ]]; then
          echo "Skipping import â€” container does not exist or access denied: $container"
        else
          echo "Container exists: $container"
          echo "Importing container: $container"

          tf_target="module.synapse_data_lake.azurerm_storage_container.synapse[\"$container\"]"
          tf_id="/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/pins-rg-data-odw-${ENV}-uks/providers/Microsoft.Storage/storageAccounts/${DATA_LAKE_STORAGE}/blobServices/default/containers/$container"

          echo "Running command: terraform import \"$tf_target\" \"$tf_id\""
          echo ""

          timeout 90 terraform import "$tf_target" "$tf_id" > "import-$container.log" 2>&1 \
          && echo "Imported: $container" \
          || { 
            echo "Failed to import: $container (timeout or error)"
            echo "Check logs: import-$container.log"
            tail -n 10 "import-$container.log"
          }
        fi

        echo "------------------------------------------------------"
      done

      echo "All imports attempts finished"
    displayName: 'Terraform Import Existing Containers'
    workingDirectory: ${{ parameters.workingDirectory }}
